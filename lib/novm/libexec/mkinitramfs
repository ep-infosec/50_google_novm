#!/bin/bash
#
# Copyright 2014 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

if [ "$#" -ne "2" ]; then
    echo "usage: $0 <kernel-version> <module-path>"
    exit 1
fi

KERNEL_VERSION=$1
MOD_PATH=$2

# Create a temporary directories.
# These will be cleaned up automatically.
unsorted=$(mktemp /tmp/unsorted.XXXXXXXXXX)
WDIR=$(mktemp -d /tmp/initrd-work.XXXXXXXXXX)

cleanup() {
    rm -rf $unsorted
    rm -rf $WDIR
}
trap cleanup EXIT

# Create base directory structure.
mkdir -p $WDIR/{bin,dev,lib/firmware,lib/modules/$KERNEL_VERSION,run,sbin,sys,proc}
mkdir -p $WDIR/etc/{modprobe.d,udev/rules.d}
touch $WDIR/etc/modprobe.d/modprobe.conf
ln -s lib $WDIR/lib64

# Create necessary device nodes.
mknod -m 640 $WDIR/dev/kmsg    c 1 11
mknod -m 640 $WDIR/dev/console c 5 1
mknod -m 664 $WDIR/dev/null    c 1 3

# Install the init file.
install -m0755 $(dirname $0)/init $WDIR/init

# Copy our files.
binfiles="cat chmod cp rm ls sh sleep mount umount mkdir rmdir ln"
sbinfiles="modprobe switch_root"

if [ -x /bin/kmod ] ; then
    binfiles="$binfiles kmod"
else
    binfiles="$binfiles lsmod"
    sbinfiles="$sbinfiles insmod"
fi

copy()
{
    local file

    if [ "$2" = "lib" ]; then
        if [ -r $1 ]; then
            file=$1
        else
            # File the library on our standard path.
            file=$(find /lib /lib64 /usr/lib /usr/lib64 -name $1 2>/dev/null | head -n 1)
        fi
    else
        file=/$2/$1
    fi

    echo "Copying $1 to $2..." 1>&2

    if ! cp $file $WDIR/$2; then
        echo "Missing required file: $file for directory $2" 1>&2
        return 1
    fi
}

filter_libs()
{
    while read line; do
        if echo $line | grep -q "linux-vdso" ||
           echo $line | grep -q "linux-gate"; then
            continue
        fi
        if echo $line | grep -q "=>"; then
            echo $line | sed "s/\t//" | cut -d" " -f3
        else
            echo $line | sed "s/\t//" | cut -d" " -f1
        fi
    done
}

for f in $binfiles; do
    ldd /bin/$f | filter_libs >> $unsorted
    copy $f bin
done
for f in $sbinfiles; do
    ldd /sbin/$f | filter_libs >> $unsorted
    copy $f sbin
done

sort $unsorted | uniq | while read library ; do
    copy $library lib
done

# Install all virtio modules.
# For user convenience, we also include all filesystems,
# and all crypto modules. They could certainly built this
# into their image and load it separately, but why not.
expand_modules()
{
    while read module; do
        # Install this module.
        echo "Copying module $module ..." 1>&2
        echo $module

        # Install all dependencies.
        DEPS=$(grep "$module: " $MOD_PATH/modules.dep | cut -d":" -f2-)
        for dep in $DEPS; do
            expand_modules $DEPS
        done
    done
}

find $MOD_PATH \
    -name virtio.ko \
    -o -name virtio_\*.ko \
    -o -name fscache.ko \
    -o -name 9p.ko \
    -o -name 9pnet.ko \
    -o -name 9pnet_virtio.ko \
    | expand_modules \
    | cpio --make-directories -p --quiet $WDIR

cp $MOD_PATH/modules.{builtin,order} \
  $WDIR/lib/modules/$KERNEL_VERSION

depmod -b $WDIR $KERNEL_VERSION

# Create our initrd.
(cd $WDIR; find . | cpio -o -H newc --quiet | gzip -9)
